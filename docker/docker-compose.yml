services:
  ldap:
    image: osixia/openldap:latest
    container_name: openldap-osixia
    command: ["--copy-service"]
    ports:
      - "389:389"
      - "636:636"
    environment:
      - LDAP_ORGANISATION=informatica
      - LDAP_DOMAIN=tierno.es
      - LDAP_ADMIN_PASSWORD=admin
      - LDAP_REMOVE_CONFIG_AFTER_SETUP=false
    volumes:
      - ../ldap/ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom
    networks:
      - app-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: laravel
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  laravel:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      - LDAP_HOST=172.19.0.3
      - LDAP_PORT=389
      - LDAP_BASE_DN=dc=tierno,dc=es
      - LDAP_USERNAME=cn=admin,dc=tierno,dc=es
      - LDAP_PASSWORD=admin
      - LDAP_AUTH_LOGIN_FALLBACK=false
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=password
    volumes:
      - ../proyecto:/var/www/html
      - document_data:/var/www/html/public/documentos
      - /root/tierno.es.crt:/etc/ssl/certs/site/certificate.crt
      - /root/tierno.es.key:/etc/ssl/certs/site/private.key
    depends_on:
      - ldap
      - mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  webssh2:
    build:
      context: ../webssh2
      dockerfile: Dockerfile
    container_name: webssh2
    restart: unless-stopped
    ports:
      - "2222:2222"
    environment:
      - SSHHOST=0.0.0.0
      - SSHPORT=22
      - SSHUSER=root
      - SSHKEY=/config/id_rsa
    volumes:
      - ../webssh2/app/config.json:/usr/src/app/config.json:ro
      - ../webssh2/config:/config
      - ../webssh2/config/id_rsa:/config/id_rsa:ro
    networks:
      - app-network
  macscanner:
    build:
      context: ../macscanner
      dockerfile: Dockerfile
    container_name: macscanner
    restart: unless-stopped
    network_mode: host
    user: root
    environment:
      - TZ=Europe/Madrid
    ports:
      - "5000:5000"

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  document_data:
    driver: local